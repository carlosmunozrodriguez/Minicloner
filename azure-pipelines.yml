jobs:
- job: Build

# Image names can be get from: https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml#software
  strategy:
    matrix:
      Windows:
        imageName: 'windows-2019'
      Ubuntu-18.04:
        imageName: 'ubuntu-18.04'
      Ubuntu-20.04:
        imageName: 'ubuntu-20.04' # ubuntu-20.04 doesn't support net core sdk 1.1'
      macOS:
        imageName: 'macOS-10.15'

  pool:
    vmImage: $(imageName)

  steps:
  - task: UseDotNet@2
    displayName: 'Install older dotnet 1.1 runtime'
    inputs:
      packageType: 'runtime'
      version: '1.1.14'

  - task: UseDotNet@2
    displayName: 'Install older dotnet 2.2 runtime'
    inputs:
      packageType: 'runtime'
      version: '2.2.207'

  - task: UseDotNet@2
    displayName: 'Install current dotnet SDK'
    inputs:
      packageType: 'sdk'
      useGlobalJson: true

  - task: DotNetCoreCLI@2
    displayName: 'dotnet --info'
    inputs:
      command: 'custom'
      custom: '--info'

  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      arguments: '--configuration Release'

  - task: DotNetCoreCLI@2
    displayName: 'Test .NET Core 2.0'
    inputs:
      command: 'test'
      arguments: '--configuration Release --framework netcoreapp2.0 --logger "trx;LogFileName=$(imageName)-netcoreapp2.0.trx" --no-build'
      publishTestResults: false

  - task: PublishTestResults@2
    displayName: 'Publish Test Results .NET Core 2.0'
    inputs:
      testRunner: 'VSTest'
      testResultsFiles: '**/$(imageName)-netcoreapp2.0*.trx'
      testRunTitle: '$(imageName) - .NET Core 2.0'
      failTaskOnFailedTests: true

  - task: DotNetCoreCLI@2
    displayName: 'Test .NET Framework 4.5'
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    inputs:
      command: 'test'
      arguments: '--configuration Release --framework net452 --logger "trx;LogFileName=$(imageName)-net452.trx" --no-build'
      publishTestResults: false

  - task: PublishTestResults@2
    displayName: 'Publish Test Results .NET Framework 4.5'
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    inputs:
      testRunner: 'VSTest'
      testResultsFiles: '**/$(imageName)-net452*.trx'
      testRunTitle: '$(imageName) - .NET Framework 4.5'
      failTaskOnFailedTests: true

  - task: DotNetCoreCLI@1
    displayName: 'Test .NET Core 1.0'
    condition: ne( variables.imageName, 'ubuntu-20.04' )
    inputs:
      command: 'test'
      projects: 'Minicloner.Tests/Minicloner.Tests.csproj'
      arguments: '--configuration Release --framework netcoreapp1.0 --logger "trx;LogFileName=$(imageName)-netcoreapp1.0.trx" --no-build'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results .NET Core 1.0'
    condition: ne( variables.imageName, 'ubuntu-20.04' )
    inputs:
      testRunner: 'VSTest'
      testResultsFiles: '**/$(imageName)-netcoreapp1.0*.trx'
      testRunTitle: '$(imageName) - .NET Core 1.0'
      failTaskOnFailedTests: true